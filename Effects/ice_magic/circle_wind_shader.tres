[gd_resource type="Shader" format=2]

[resource]
code = "shader_type spatial;
render_mode cull_disabled;

uniform sampler2D noise;
uniform float offset = 0.0;
uniform float wind_amount = 0.2;
uniform float wind_contrast = 0.8;

float fresnel(float amount, vec3 normal, vec3 view)
{
	return pow((1.0 - clamp(dot(normalize(normal), normalize(view)), 0.0, 1.0 )), amount);
}

void fragment(){
	float min_amount = max(wind_amount, 0.0);
	float max_amount = min(wind_amount + wind_contrast, 1.0);
	float noise_texture = texture(noise, UV + offset).x;
	ALPHA = smoothstep(min_amount, max_amount, noise_texture) * (1.0 - fresnel(0.05, NORMAL, VIEW)) * sin(UV.y * 3.14);
}"

[gd_resource type="ShaderMaterial" load_steps=24 format=2]

[sub_resource type="VisualShaderNodeScalarSmoothStep" id=1]
output_port_for_preview = 0
default_input_values = [ 0, 0.15, 1, 0.4, 2, 0.0 ]

[sub_resource type="VisualShaderNodeInput" id=2]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorDecompose" id=3]

[sub_resource type="OpenSimplexNoise" id=4]
period = 100.0

[sub_resource type="NoiseTexture" id=5]
seamless = true
noise = SubResource( 4 )

[sub_resource type="VisualShaderNodeTexture" id=6]
texture = SubResource( 5 )

[sub_resource type="VisualShaderNodeColorConstant" id=7]
constant = Color( 0.539062, 0.754227, 1, 1 )

[sub_resource type="VisualShaderNodeScalarOp" id=8]
default_input_values = [ 0, 0.0, 1, 0.4 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=9]
default_input_values = [ 0, 0.0, 1, 1.5 ]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=10]
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarOp" id=11]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=12]
default_input_values = [ 0, 1.2, 1, 0.0 ]
operator = 1

[sub_resource type="VisualShaderNodeFresnel" id=13]
default_input_values = [ 2, true, 3, 1.0 ]

[sub_resource type="VisualShaderNodeScalarOp" id=14]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=15]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=16]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 1.0 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarUniform" id=17]
uniform_name = "Force"

[sub_resource type="VisualShaderNodeVectorDecompose" id=18]

[sub_resource type="VisualShaderNodeVectorCompose" id=19]

[sub_resource type="VisualShaderNodeInput" id=20]
input_name = "time"

[sub_resource type="VisualShaderNodeScalarOp" id=21]

[sub_resource type="VisualShaderNodeScalarOp" id=22]

[sub_resource type="VisualShader" id=23]
code = "shader_type spatial;
render_mode cull_disabled, specular_schlick_ggx;

uniform sampler2D tex_frg_2;
uniform float Force;



void vertex() {
// Output:0

}

void fragment() {
// Color:25
	vec3 n_out25p0 = vec3(0.539062, 0.754227, 1.000000);
	float n_out25p1 = 1.000000;

// Fresnel:33
	float n_in33p3 = 1.00000;
	float n_out33p0 = pow(clamp(dot(NORMAL, VIEW), 0.0, 1.0), n_in33p3);

// Input:7
	float n_out7p0 = TIME;

// ScalarOp:28
	float n_in28p1 = 0.40000;
	float n_out28p0 = n_out7p0 * n_in28p1;

// Input:3
	vec3 n_out3p0 = vec3(UV, 0.0);

// VectorDecompose:5
	float n_out5p0 = n_out3p0.x;
	float n_out5p1 = n_out3p0.y;
	float n_out5p2 = n_out3p0.z;

// ScalarOp:8
	float n_out8p0 = n_out28p0 + n_out5p0;

// ScalarOp:29
	float n_in29p1 = 1.50000;
	float n_out29p0 = n_out7p0 * n_in29p1;

// ScalarOp:9
	float n_out9p0 = n_out29p0 + n_out5p1;

// VectorCompose:6
	float n_in6p2 = 0.00000;
	vec3 n_out6p0 = vec3(n_out8p0, n_out9p0, n_in6p2);

// Texture:2
	vec4 tex_frg_2_read = texture(tex_frg_2, n_out6p0.xy);
	vec3 n_out2p0 = tex_frg_2_read.rgb;
	float n_out2p1 = tex_frg_2_read.a;

// Input:11
	vec3 n_out11p0 = vec3(UV, 0.0);

// VectorDecompose:12
	float n_out12p0 = n_out11p0.x;
	float n_out12p1 = n_out11p0.y;
	float n_out12p2 = n_out11p0.z;

// ScalarOp:32
	float n_in32p0 = 1.20000;
	float n_out32p0 = n_in32p0 - n_out12p1;

// ScalarOp:35
	float n_out35p0 = n_out12p1 * n_out32p0;

// ScalarUniform:37
	float n_out37p0 = Force;

// ScalarOp:36
	float n_out36p0 = n_out35p0 * n_out37p0;

// ScalarOp:31
	float n_out31p0 = dot(n_out2p0, vec3(0.333333, 0.333333, 0.333333)) * n_out36p0;

// ScalarSmoothStep:10
	float n_in10p0 = 0.15000;
	float n_in10p1 = 0.40000;
	float n_out10p0 = smoothstep(n_in10p0, n_in10p1, n_out31p0);

// ScalarOp:34
	float n_out34p0 = n_out33p0 * n_out10p0;

// Output:0
	ALBEDO = n_out25p0;
	ALPHA = n_out34p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 300.361, 335.396 )
modes/cull = 2
nodes/fragment/0/position = Vector2( 2000, 80 )
nodes/fragment/2/node = SubResource( 6 )
nodes/fragment/2/position = Vector2( 0, 180 )
nodes/fragment/3/node = SubResource( 10 )
nodes/fragment/3/position = Vector2( -920, 220 )
nodes/fragment/5/node = SubResource( 18 )
nodes/fragment/5/position = Vector2( -700, 240 )
nodes/fragment/6/node = SubResource( 19 )
nodes/fragment/6/position = Vector2( -200, 220 )
nodes/fragment/7/node = SubResource( 20 )
nodes/fragment/7/position = Vector2( -920, 140 )
nodes/fragment/8/node = SubResource( 21 )
nodes/fragment/8/position = Vector2( -340, 120 )
nodes/fragment/9/node = SubResource( 22 )
nodes/fragment/9/position = Vector2( -360, 280 )
nodes/fragment/10/node = SubResource( 1 )
nodes/fragment/10/position = Vector2( 1100, 180 )
nodes/fragment/11/node = SubResource( 2 )
nodes/fragment/11/position = Vector2( 60, 40 )
nodes/fragment/12/node = SubResource( 3 )
nodes/fragment/12/position = Vector2( 220, 40 )
nodes/fragment/25/node = SubResource( 7 )
nodes/fragment/25/position = Vector2( 1420, 320 )
nodes/fragment/28/node = SubResource( 8 )
nodes/fragment/28/position = Vector2( -500, 0 )
nodes/fragment/29/node = SubResource( 9 )
nodes/fragment/29/position = Vector2( -600, 360 )
nodes/fragment/31/node = SubResource( 11 )
nodes/fragment/31/position = Vector2( 920, 200 )
nodes/fragment/32/node = SubResource( 12 )
nodes/fragment/32/position = Vector2( 280, 360 )
nodes/fragment/33/node = SubResource( 13 )
nodes/fragment/33/position = Vector2( 1200, 20 )
nodes/fragment/34/node = SubResource( 14 )
nodes/fragment/34/position = Vector2( 1640, 60 )
nodes/fragment/35/node = SubResource( 15 )
nodes/fragment/35/position = Vector2( 520, 300 )
nodes/fragment/36/node = SubResource( 16 )
nodes/fragment/36/position = Vector2( 740, 340 )
nodes/fragment/37/node = SubResource( 17 )
nodes/fragment/37/position = Vector2( 520, 540 )
nodes/fragment/connections = PoolIntArray( 3, 0, 5, 0, 5, 0, 8, 1, 8, 0, 6, 0, 5, 1, 9, 1, 9, 0, 6, 1, 6, 0, 2, 0, 11, 0, 12, 0, 7, 0, 28, 0, 28, 0, 8, 0, 7, 0, 29, 0, 29, 0, 9, 0, 12, 1, 32, 1, 33, 0, 34, 0, 34, 0, 0, 1, 25, 0, 0, 0, 10, 0, 34, 1, 31, 0, 10, 2, 32, 0, 35, 1, 12, 1, 35, 0, 2, 0, 31, 0, 35, 0, 36, 0, 36, 0, 31, 1, 37, 0, 36, 1 )

[resource]
shader = SubResource( 23 )
shader_param/Force = 0.0

[gd_resource type="ShaderMaterial" load_steps=36 format=2]

[sub_resource type="VisualShaderNodeVectorDecompose" id=1]

[sub_resource type="VisualShaderNodeVectorCompose" id=2]

[sub_resource type="VisualShaderNodeInput" id=3]
input_name = "time"

[sub_resource type="VisualShaderNodeScalarOp" id=4]
default_input_values = [ 0, 0.0, 1, 1.0 ]
operator = 2

[sub_resource type="OpenSimplexNoise" id=5]

[sub_resource type="NoiseTexture" id=6]
height = 1
noise = SubResource( 5 )

[sub_resource type="VisualShaderNodeTexture" id=7]
texture = SubResource( 6 )

[sub_resource type="VisualShaderNodeScalarOp" id=8]
operator = 1

[sub_resource type="VisualShaderNodeVectorDecompose" id=9]

[sub_resource type="VisualShaderNodeScalarOp" id=10]
default_input_values = [ 0, 0.0, 1, 1.0 ]
operator = 2

[sub_resource type="VisualShaderNodeVectorCompose" id=11]

[sub_resource type="VisualShaderNodeScalarOp" id=12]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeInput" id=13]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorScalarMix" id=14]

[sub_resource type="VisualShaderNodeColorConstant" id=15]
constant = Color( 0.111458, 0.140046, 0.635396, 1 )

[sub_resource type="VisualShaderNodeColorConstant" id=16]
constant = Color( 0.503145, 0.31604, 1, 1 )

[sub_resource type="VisualShaderNodeVectorOp" id=17]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 2, 2, 2 ) ]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=18]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorDecompose" id=19]

[sub_resource type="VisualShaderNodeScalarOp" id=20]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeScalarSmoothStep" id=21]
output_port_for_preview = 0
default_input_values = [ 0, 1.0, 1, 0.8, 2, 0.0 ]

[sub_resource type="VisualShaderNodeVectorDecompose" id=22]

[sub_resource type="VisualShaderNodeScalarUniform" id=23]
uniform_name = "height"

[sub_resource type="VisualShaderNodeScalarSmoothStep" id=24]
output_port_for_preview = 0
default_input_values = [ 0, 0.2, 1, 0.4, 2, 0.0 ]

[sub_resource type="VisualShaderNodeScalarOp" id=25]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 2.0 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarUniform" id=26]
uniform_name = "Speed"

[sub_resource type="VisualShaderNodeScalarUniform" id=27]
uniform_name = "Resolution"

[sub_resource type="OpenSimplexNoise" id=28]
period = 30.2

[sub_resource type="NoiseTexture" id=29]
height = 1
noise = SubResource( 28 )

[sub_resource type="VisualShaderNodeTexture" id=30]
texture = SubResource( 29 )

[sub_resource type="VisualShaderNodeExpression" id=31]
output_port_for_preview = 0
size = Vector2( 543, 376 )
expression = "output0 = by - ((1.0+sin(noise * 3.14 * res)) / 4.0);"

[sub_resource type="VisualShaderNodeScalarSmoothStep" id=32]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 1.0, 2, 0.0 ]

[sub_resource type="VisualShaderNodeInput" id=33]
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarOp" id=34]

[sub_resource type="VisualShader" id=35]
code = "shader_type spatial;
render_mode cull_disabled, specular_schlick_ggx, ambient_light_disabled;

uniform float height;
uniform float Speed;
uniform sampler2D tex_frg_5;
uniform sampler2D tex_frg_14;
uniform float Resolution;



void vertex() {
// Output:0

}

void fragment() {
// Input:24
	vec3 n_out24p0 = vec3(UV, 0.0);

// VectorDecompose:25
	float n_out25p0 = n_out24p0.x;
	float n_out25p1 = n_out24p0.y;
	float n_out25p2 = n_out24p0.z;

// ScalarSmoothStep:29
	float n_in29p0 = 1.00000;
	float n_in29p1 = 0.80000;
	float n_out29p0 = smoothstep(n_in29p0, n_in29p1, n_out25p1);

// ScalarUniform:32
	float n_out32p0 = height;

// Input:8
	vec3 n_out8p0 = vec3(UV, 0.0);

// VectorDecompose:10
	float n_out10p0 = n_out8p0.x;
	float n_out10p1 = n_out8p0.y;
	float n_out10p2 = n_out8p0.z;

// Input:12
	float n_out12p0 = TIME;

// ScalarUniform:36
	float n_out36p0 = Speed;

// ScalarOp:13
	float n_out13p0 = n_out12p0 * n_out36p0;

// ScalarOp:9
	float n_out9p0 = n_out10p0 + n_out13p0;

// VectorCompose:11
	float n_in11p2 = 0.00000;
	vec3 n_out11p0 = vec3(n_out9p0, n_out10p1, n_in11p2);

// Texture:5
	vec4 tex_frg_5_read = texture(tex_frg_5, n_out11p0.xy);
	vec3 n_out5p0 = tex_frg_5_read.rgb;
	float n_out5p1 = tex_frg_5_read.a;

// VectorDecompose:16
	float n_out16p0 = n_out8p0.x;
	float n_out16p1 = n_out8p0.y;
	float n_out16p2 = n_out8p0.z;

// ScalarOp:17
	float n_out17p0 = n_out12p0 * n_out36p0;

// ScalarOp:15
	float n_out15p0 = n_out16p0 - n_out17p0;

// VectorCompose:18
	float n_in18p2 = 0.00000;
	vec3 n_out18p0 = vec3(n_out15p0, n_out16p1, n_in18p2);

// Texture:14
	vec4 tex_frg_14_read = texture(tex_frg_14, n_out18p0.xy);
	vec3 n_out14p0 = tex_frg_14_read.rgb;
	float n_out14p1 = tex_frg_14_read.a;

// ScalarOp:19
	float n_out19p0 = dot(n_out5p0, vec3(0.333333, 0.333333, 0.333333)) * dot(n_out14p0, vec3(0.333333, 0.333333, 0.333333));

// Input:2
	vec3 n_out2p0 = vec3(UV, 0.0);

// VectorDecompose:3
	float n_out3p0 = n_out2p0.x;
	float n_out3p1 = n_out2p0.y;
	float n_out3p2 = n_out2p0.z;

// ScalarUniform:37
	float n_out37p0 = Resolution;

// Expression:6
	float n_out6p0;
	n_out6p0 = 0.0;
	{
		n_out6p0 = n_out3p1 - ((1.0+sin(n_out19p0 * 3.14 * n_out37p0)) / 4.0);
	}

// ScalarSmoothStep:7
	float n_in7p1 = 1.00000;
	float n_out7p0 = smoothstep(n_out32p0, n_in7p1, n_out6p0);

// ScalarOp:26
	float n_out26p0 = n_out29p0 * n_out7p0;

// Color:22
	vec3 n_out22p0 = vec3(0.503145, 0.316040, 1.000000);
	float n_out22p1 = 1.000000;

// Color:21
	vec3 n_out21p0 = vec3(0.111458, 0.140046, 0.635396);
	float n_out21p1 = 1.000000;

// ScalarSmoothStep:34
	float n_in34p0 = 0.20000;
	float n_in34p1 = 0.40000;
	float n_out34p0 = smoothstep(n_in34p0, n_in34p1, n_out19p0);

// VectorScalarMix:20
	vec3 n_out20p0 = mix(n_out22p0, n_out21p0, n_out34p0);

// ScalarOp:35
	float n_in35p1 = 2.00000;
	float n_out35p0 = n_out3p1 * n_in35p1;

// VectorOp:23
	vec3 n_out23p0 = n_out20p0 * vec3(n_out35p0);

// Output:0
	ALPHA = n_out26p0;
	EMISSION = n_out23p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 307.094, 381.339 )
modes/cull = 2
flags/ambient_light_disabled = true
nodes/fragment/0/position = Vector2( 1880, 220 )
nodes/fragment/2/node = SubResource( 13 )
nodes/fragment/2/position = Vector2( -400, 260 )
nodes/fragment/3/node = SubResource( 22 )
nodes/fragment/3/position = Vector2( -160, 220 )
nodes/fragment/5/node = SubResource( 30 )
nodes/fragment/5/position = Vector2( -120, 360 )
nodes/fragment/6/node = SubResource( 31 )
nodes/fragment/6/position = Vector2( 320, 80 )
nodes/fragment/6/size = Vector2( 543, 376 )
nodes/fragment/6/input_ports = "0,0,noise;1,0,by;2,0,res;"
nodes/fragment/6/output_ports = "0,0,output0;"
nodes/fragment/6/expression = "output0 = by - ((1.0+sin(noise * 3.14 * res)) / 4.0);"
nodes/fragment/7/node = SubResource( 32 )
nodes/fragment/7/position = Vector2( 980, 280 )
nodes/fragment/8/node = SubResource( 33 )
nodes/fragment/8/position = Vector2( -920, 540 )
nodes/fragment/9/node = SubResource( 34 )
nodes/fragment/9/position = Vector2( -460, 500 )
nodes/fragment/10/node = SubResource( 1 )
nodes/fragment/10/position = Vector2( -720, 540 )
nodes/fragment/11/node = SubResource( 2 )
nodes/fragment/11/position = Vector2( -480, 640 )
nodes/fragment/12/node = SubResource( 3 )
nodes/fragment/12/position = Vector2( -940, 620 )
nodes/fragment/13/node = SubResource( 4 )
nodes/fragment/13/position = Vector2( -720, 660 )
nodes/fragment/14/node = SubResource( 7 )
nodes/fragment/14/position = Vector2( -120, 600 )
nodes/fragment/15/node = SubResource( 8 )
nodes/fragment/15/position = Vector2( -460, 780 )
nodes/fragment/16/node = SubResource( 9 )
nodes/fragment/16/position = Vector2( -720, 800 )
nodes/fragment/17/node = SubResource( 10 )
nodes/fragment/17/position = Vector2( -720, 920 )
nodes/fragment/18/node = SubResource( 11 )
nodes/fragment/18/position = Vector2( -480, 900 )
nodes/fragment/19/node = SubResource( 12 )
nodes/fragment/19/position = Vector2( 100, 400 )
nodes/fragment/20/node = SubResource( 14 )
nodes/fragment/20/position = Vector2( 1100, 580 )
nodes/fragment/21/node = SubResource( 15 )
nodes/fragment/21/position = Vector2( 660, 520 )
nodes/fragment/22/node = SubResource( 16 )
nodes/fragment/22/position = Vector2( 660, 620 )
nodes/fragment/23/node = SubResource( 17 )
nodes/fragment/23/position = Vector2( 1340, 620 )
nodes/fragment/24/node = SubResource( 18 )
nodes/fragment/24/position = Vector2( 520, 20 )
nodes/fragment/25/node = SubResource( 19 )
nodes/fragment/25/position = Vector2( 680, 20 )
nodes/fragment/26/node = SubResource( 20 )
nodes/fragment/26/position = Vector2( 1280, 200 )
nodes/fragment/29/node = SubResource( 21 )
nodes/fragment/29/position = Vector2( 980, 40 )
nodes/fragment/32/node = SubResource( 23 )
nodes/fragment/32/position = Vector2( 700, 140 )
nodes/fragment/34/node = SubResource( 24 )
nodes/fragment/34/position = Vector2( 428, 695 )
nodes/fragment/35/node = SubResource( 25 )
nodes/fragment/35/position = Vector2( 1120, 700 )
nodes/fragment/36/node = SubResource( 26 )
nodes/fragment/36/position = Vector2( -1240, 860 )
nodes/fragment/37/node = SubResource( 27 )
nodes/fragment/37/position = Vector2( 42.3608, 95.1456 )
nodes/fragment/connections = PoolIntArray( 2, 0, 3, 0, 3, 1, 6, 1, 6, 0, 7, 2, 8, 0, 10, 0, 10, 0, 9, 0, 9, 0, 11, 0, 10, 1, 11, 1, 11, 0, 5, 0, 12, 0, 13, 0, 13, 0, 9, 1, 16, 0, 15, 0, 15, 0, 18, 0, 16, 1, 18, 1, 17, 0, 15, 1, 8, 0, 16, 0, 12, 0, 17, 0, 18, 0, 14, 0, 14, 0, 19, 1, 21, 0, 20, 1, 22, 0, 20, 0, 20, 0, 23, 0, 24, 0, 25, 0, 7, 0, 26, 1, 25, 1, 29, 2, 29, 0, 26, 0, 19, 0, 6, 0, 5, 0, 19, 0, 23, 0, 0, 5, 19, 0, 34, 2, 34, 0, 20, 2, 35, 0, 23, 1, 3, 1, 35, 0, 32, 0, 7, 0, 26, 0, 0, 1, 36, 0, 13, 1, 36, 0, 17, 1, 37, 0, 6, 2 )

[resource]
render_priority = 1
shader = SubResource( 35 )
shader_param/height = 0.0
shader_param/Speed = 0.04
shader_param/Resolution = 10.0

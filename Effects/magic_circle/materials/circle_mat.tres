[gd_resource type="ShaderMaterial" load_steps=75 format=2]

[ext_resource path="res://Textures/Mask.png" type="Texture" id=1]
[ext_resource path="res://Textures/Gradient.png" type="Texture" id=2]

[sub_resource type="VisualShaderNodeTexture" id=1]
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeVectorScalarMix" id=2]
output_port_for_preview = 0
default_input_values = [ 0, Vector3( 1, 1, 1 ), 1, Vector3( 0, 0, 0 ), 2, 0.0 ]

[sub_resource type="VisualShaderNodeScalarOp" id=3]
output_port_for_preview = 0
default_input_values = [ 0, 1.0, 1, -1.0 ]
operator = 1

[sub_resource type="OpenSimplexNoise" id=4]
period = 9.4
persistence = 1.0

[sub_resource type="NoiseTexture" id=5]
seamless = true
noise = SubResource( 4 )

[sub_resource type="VisualShaderNodeTexture" id=6]
output_port_for_preview = 0
texture = SubResource( 5 )

[sub_resource type="VisualShaderNodeColorConstant" id=7]
constant = Color( 0.978317, 0.0699463, 1, 1 )

[sub_resource type="VisualShaderNodeTexture" id=8]
texture = ExtResource( 2 )

[sub_resource type="OpenSimplexNoise" id=9]
period = 256.0
persistence = 0.0

[sub_resource type="NoiseTexture" id=10]
seamless = true
noise = SubResource( 9 )

[sub_resource type="VisualShaderNodeTexture" id=11]
output_port_for_preview = 0
texture = SubResource( 10 )

[sub_resource type="OpenSimplexNoise" id=12]
seed = 10
period = 256.0
persistence = 0.0

[sub_resource type="NoiseTexture" id=13]
seamless = true
noise = SubResource( 12 )

[sub_resource type="VisualShaderNodeTexture" id=14]
output_port_for_preview = 0
texture = SubResource( 13 )

[sub_resource type="VisualShaderNodeInput" id=15]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorDecompose" id=16]

[sub_resource type="VisualShaderNodeVectorCompose" id=17]

[sub_resource type="VisualShaderNodeVectorCompose" id=18]

[sub_resource type="VisualShaderNodeScalarOp" id=19]

[sub_resource type="VisualShaderNodeScalarOp" id=20]
operator = 1

[sub_resource type="VisualShaderNodeInput" id=21]
input_name = "time"

[sub_resource type="VisualShaderNodeScalarSmoothStep" id=22]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1, 2, 0.0 ]

[sub_resource type="VisualShaderNodeExpression" id=23]
output_port_for_preview = 0
size = Vector2( 574, 568 )
expression = "float cosa = cos(rotation);
float sina = sin(rotation);
uv -= pivot;
output0 = vec3(
    cosa * uv.x - sina * uv.y,
    cosa * uv.y + sina * uv.x,
	0
) + pivot;"

[sub_resource type="VisualShaderNodeInput" id=24]
input_name = "uv"

[sub_resource type="VisualShaderNodeVec3Constant" id=25]
constant = Vector3( 0.5, 0.5, 0 )

[sub_resource type="VisualShaderNodeInput" id=26]
input_name = "time"

[sub_resource type="VisualShaderNodeVectorClamp" id=27]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeScalarUniform" id=28]
uniform_name = "Drawing"

[sub_resource type="VisualShaderNodeVectorScalarMix" id=29]

[sub_resource type="VisualShaderNodeColorConstant" id=30]
constant = Color( 0.156374, 0, 1, 1 )

[sub_resource type="VisualShaderNodeVectorScalarMix" id=31]
output_port_for_preview = 0
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0, 0, 0 ), 2, 0.5 ]

[sub_resource type="VisualShaderNodeColorConstant" id=32]
constant = Color( 0.498855, 0.144531, 1, 1 )

[sub_resource type="VisualShaderNodeScalarOp" id=33]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeVectorCompose" id=34]
default_input_values = [ 0, 0.5, 1, 0.5, 2, 0.0 ]

[sub_resource type="VisualShaderNodeInput" id=35]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorDistance" id=36]
output_port_for_preview = 0
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.5, 0.5, 0.5 ) ]

[sub_resource type="VisualShaderNodeScalarFunc" id=37]
output_port_for_preview = 0
function = 0

[sub_resource type="VisualShaderNodeScalarOp" id=38]
default_input_values = [ 0, 0.0, 1, 10.0 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=39]

[sub_resource type="VisualShaderNodeScalarOp" id=40]
default_input_values = [ 0, 0.0, 1, 0.5 ]

[sub_resource type="VisualShaderNodeInput" id=41]
input_name = "time"

[sub_resource type="OpenSimplexNoise" id=42]

[sub_resource type="NoiseTexture" id=43]
seamless = true
noise = SubResource( 42 )

[sub_resource type="VisualShaderNodeTexture" id=44]
texture = SubResource( 43 )

[sub_resource type="VisualShaderNodeScalarOp" id=45]
output_port_for_preview = 0
operator = 2

[sub_resource type="OpenSimplexNoise" id=46]
seed = 10

[sub_resource type="NoiseTexture" id=47]
seamless = true
noise = SubResource( 46 )

[sub_resource type="VisualShaderNodeTexture" id=48]
texture = SubResource( 47 )

[sub_resource type="VisualShaderNodeInput" id=49]
input_name = "uv"

[sub_resource type="VisualShaderNodeInput" id=50]
input_name = "time"

[sub_resource type="VisualShaderNodeScalarOp" id=51]

[sub_resource type="VisualShaderNodeVectorDecompose" id=52]

[sub_resource type="VisualShaderNodeVectorCompose" id=53]

[sub_resource type="VisualShaderNodeScalarOp" id=54]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeVectorCompose" id=55]

[sub_resource type="VisualShaderNodeScalarOp" id=56]

[sub_resource type="VisualShaderNodeScalarSmoothStep" id=57]
output_port_for_preview = 0
default_input_values = [ 0, 0.1, 1, 0.2, 2, 0.0 ]

[sub_resource type="VisualShaderNodeScalarFunc" id=58]
function = 12

[sub_resource type="VisualShaderNodeInput" id=59]
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarOp" id=60]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=61]

[sub_resource type="VisualShaderNodeScalarOp" id=62]
output_port_for_preview = 0
default_input_values = [ 0, 1.0, 1, -1.0 ]
operator = 1

[sub_resource type="VisualShaderNodeVectorOp" id=63]
operator = 1

[sub_resource type="VisualShaderNodeScalarUniform" id=64]
uniform_name = "Deformation"

[sub_resource type="VisualShaderNodeScalarOp" id=65]
default_input_values = [ 0, 0.0, 1, 0.2 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=66]
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=67]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 4.0 ]
operator = 3

[sub_resource type="VisualShaderNodeVectorOp" id=68]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 2, 2, 2 ) ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=69]
default_input_values = [ 0, 0.0, 1, 1.0 ]

[sub_resource type="VisualShaderNodeVectorOp" id=70]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 2, 2, 2 ) ]
operator = 2

[sub_resource type="VisualShaderNodeScalarUniform" id=71]
uniform_name = "Emission"

[sub_resource type="VisualShader" id=72]
code = "shader_type spatial;
render_mode specular_schlick_ggx, ambient_light_disabled;

uniform float Drawing;
uniform sampler2D tex_frg_17;
uniform sampler2D tex_frg_2;
uniform sampler2D tex_frg_61;
uniform sampler2D tex_frg_63;
uniform float Deformation;
uniform sampler2D tex_frg_10;
uniform float Emission;



void vertex() {
// Output:0

}

void fragment() {
// ScalarUniform:39
	float n_out39p0 = Drawing;

// ScalarOp:6
	float n_in6p1 = 0.50000;
	float n_out6p0 = n_out39p0 + n_in6p1;

// Texture:17
	vec4 tex_frg_17_read = texture(tex_frg_17, UV.xy);
	vec3 n_out17p0 = tex_frg_17_read.rgb;
	float n_out17p1 = tex_frg_17_read.a;

// Texture:2
	vec4 tex_frg_2_read = texture(tex_frg_2, UV.xy);
	vec3 n_out2p0 = tex_frg_2_read.rgb;
	float n_out2p1 = tex_frg_2_read.a;

// ScalarOp:50
	float n_out50p0 = dot(n_out17p0, vec3(0.333333, 0.333333, 0.333333)) * dot(n_out2p0, vec3(0.333333, 0.333333, 0.333333));

// ScalarSmoothStep:3
	float n_out3p0 = smoothstep(n_out39p0, n_out6p0, n_out50p0);

// Input:74
	vec3 n_out74p0 = vec3(UV, 0.0);

// Input:64
	vec3 n_out64p0 = vec3(UV, 0.0);

// VectorDecompose:67
	float n_out67p0 = n_out64p0.x;
	float n_out67p1 = n_out64p0.y;
	float n_out67p2 = n_out64p0.z;

// Input:65
	float n_out65p0 = TIME;

// ScalarOp:84
	float n_in84p1 = 0.10000;
	float n_out84p0 = n_out65p0 * n_in84p1;

// ScalarOp:66
	float n_out66p0 = n_out67p0 + n_out84p0;

// VectorCompose:68
	float n_in68p2 = 0.00000;
	vec3 n_out68p0 = vec3(n_out66p0, n_out67p1, n_in68p2);

// Texture:61
	vec4 tex_frg_61_read = texture(tex_frg_61, n_out68p0.xy);
	vec3 n_out61p0 = tex_frg_61_read.rgb;
	float n_out61p1 = tex_frg_61_read.a;

// ScalarOp:71
	float n_out71p0 = n_out67p1 + n_out84p0;

// VectorCompose:70
	float n_in70p2 = 0.00000;
	vec3 n_out70p0 = vec3(n_out67p0, n_out71p0, n_in70p2);

// Texture:63
	vec4 tex_frg_63_read = texture(tex_frg_63, n_out70p0.xy);
	vec3 n_out63p0 = tex_frg_63_read.rgb;
	float n_out63p1 = tex_frg_63_read.a;

// ScalarOp:69
	float n_out69p0 = dot(n_out61p0, vec3(0.333333, 0.333333, 0.333333)) * dot(n_out63p0, vec3(0.333333, 0.333333, 0.333333));

// ScalarUniform:81
	float n_out81p0 = Deformation;

// ScalarOp:78
	float n_out78p0 = n_out69p0 * n_out81p0;

// VectorOp:79
	vec3 n_out79p0 = n_out74p0 + vec3(n_out78p0);

// ScalarOp:85
	float n_in85p1 = 4.00000;
	float n_out85p0 = n_out81p0 / n_in85p1;

// VectorOp:80
	vec3 n_out80p0 = n_out79p0 - vec3(n_out85p0);

// Texture:10
	vec4 tex_frg_10_read = texture(tex_frg_10, n_out80p0.xy);
	vec3 n_out10p0 = tex_frg_10_read.rgb;
	float n_out10p1 = tex_frg_10_read.a;

// ScalarOp:8
	float n_in8p0 = 1.00000;
	float n_out8p0 = n_in8p0 - dot(n_out10p0, vec3(0.333333, 0.333333, 0.333333));

// VectorScalarMix:11
	vec3 n_in11p0 = vec3(1.00000, 1.00000, 1.00000);
	vec3 n_out11p0 = mix(n_in11p0, vec3(n_out3p0), n_out8p0);

// ScalarOp:12
	float n_in12p0 = 1.00000;
	float n_out12p0 = n_in12p0 - dot(n_out11p0, vec3(0.333333, 0.333333, 0.333333));

// Color:19
	vec3 n_out19p0 = vec3(0.978317, 0.069946, 1.000000);
	float n_out19p1 = 1.000000;

// Color:42
	vec3 n_out42p0 = vec3(0.156374, 0.000000, 1.000000);
	float n_out42p1 = 1.000000;

// VectorScalarMix:41
	vec3 n_out41p0 = mix(n_out19p0, n_out42p0, n_out3p0);

// Color:46
	vec3 n_out46p0 = vec3(0.498855, 0.144531, 1.000000);
	float n_out46p1 = 1.000000;

// Input:55
	vec3 n_out55p0 = vec3(UV, 0.0);

// VectorCompose:54
	float n_in54p0 = 0.50000;
	float n_in54p1 = 0.50000;
	float n_in54p2 = 0.00000;
	vec3 n_out54p0 = vec3(n_in54p0, n_in54p1, n_in54p2);

// Distance:56
	float n_out56p0 = distance(n_out55p0, n_out54p0);

// Input:60
	float n_out60p0 = TIME;

// ScalarOp:83
	float n_in83p1 = 0.20000;
	float n_out83p0 = n_out60p0 * n_in83p1;

// ScalarOp:59
	float n_out59p0 = n_out56p0 + n_out83p0;

// ScalarOp:58
	float n_in58p1 = 10.00000;
	float n_out58p0 = n_out59p0 * n_in58p1;

// ScalarFunc:57
	float n_out57p0 = sin(n_out58p0);

// ScalarFunc:73
	float n_out73p0 = abs(n_out57p0);

// ScalarOp:62
	float n_out62p0 = n_out73p0 * n_out69p0;

// ScalarSmoothStep:72
	float n_in72p0 = 0.10000;
	float n_in72p1 = 0.20000;
	float n_out72p0 = smoothstep(n_in72p0, n_in72p1, n_out62p0);

// VectorScalarMix:45
	vec3 n_out45p0 = mix(n_out41p0, n_out46p0, n_out72p0);

// ScalarOp:88
	float n_in88p1 = 1.00000;
	float n_out88p0 = n_out72p0 + n_in88p1;

// VectorOp:86
	vec3 n_out86p0 = n_out45p0 * vec3(n_out88p0);

// ScalarUniform:90
	float n_out90p0 = Emission;

// VectorOp:89
	vec3 n_out89p0 = n_out86p0 * vec3(n_out90p0);

// Output:0
	ALPHA = n_out12p0;
	EMISSION = n_out89p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 295.665, 418.391 )
flags/ambient_light_disabled = true
nodes/fragment/0/position = Vector2( 1660, 300 )
nodes/fragment/2/node = SubResource( 8 )
nodes/fragment/2/position = Vector2( -720, 420 )
nodes/fragment/3/node = SubResource( 22 )
nodes/fragment/3/position = Vector2( 40, 200 )
nodes/fragment/6/node = SubResource( 40 )
nodes/fragment/6/position = Vector2( -200, 80 )
nodes/fragment/8/node = SubResource( 62 )
nodes/fragment/8/position = Vector2( 220, 600 )
nodes/fragment/10/node = SubResource( 1 )
nodes/fragment/10/position = Vector2( -40, 660 )
nodes/fragment/11/node = SubResource( 2 )
nodes/fragment/11/position = Vector2( 440, 260 )
nodes/fragment/12/node = SubResource( 3 )
nodes/fragment/12/position = Vector2( 640, 240 )
nodes/fragment/17/node = SubResource( 6 )
nodes/fragment/17/position = Vector2( -960, 120 )
nodes/fragment/19/node = SubResource( 7 )
nodes/fragment/19/position = Vector2( 460, 520 )
nodes/fragment/20/node = SubResource( 11 )
nodes/fragment/20/position = Vector2( -3720, 1320 )
nodes/fragment/21/node = SubResource( 14 )
nodes/fragment/21/position = Vector2( -3720, 1660 )
nodes/fragment/22/node = SubResource( 15 )
nodes/fragment/22/position = Vector2( -4340, 1200 )
nodes/fragment/23/node = SubResource( 16 )
nodes/fragment/23/position = Vector2( -4220, 1240 )
nodes/fragment/24/node = SubResource( 17 )
nodes/fragment/24/position = Vector2( -3920, 1440 )
nodes/fragment/25/node = SubResource( 18 )
nodes/fragment/25/position = Vector2( -3920, 1620 )
nodes/fragment/26/node = SubResource( 19 )
nodes/fragment/26/position = Vector2( -4140, 1420 )
nodes/fragment/27/node = SubResource( 20 )
nodes/fragment/27/position = Vector2( -4120, 1620 )
nodes/fragment/28/node = SubResource( 21 )
nodes/fragment/28/position = Vector2( -4300, 1500 )
nodes/fragment/34/node = SubResource( 23 )
nodes/fragment/34/position = Vector2( -3400, 1360 )
nodes/fragment/34/size = Vector2( 574, 568 )
nodes/fragment/34/input_ports = "0,1,uv;1,0,rotation;2,1,pivot;"
nodes/fragment/34/output_ports = "0,1,output0;"
nodes/fragment/34/expression = "float cosa = cos(rotation);
float sina = sin(rotation);
uv -= pivot;
output0 = vec3(
    cosa * uv.x - sina * uv.y,
    cosa * uv.y + sina * uv.x,
	0
) + pivot;"
nodes/fragment/35/node = SubResource( 24 )
nodes/fragment/35/position = Vector2( -3600, 1360 )
nodes/fragment/36/node = SubResource( 25 )
nodes/fragment/36/position = Vector2( -3860, 1620 )
nodes/fragment/37/node = SubResource( 26 )
nodes/fragment/37/position = Vector2( -3720, 1500 )
nodes/fragment/38/node = SubResource( 27 )
nodes/fragment/38/position = Vector2( -2780, 1380 )
nodes/fragment/39/node = SubResource( 28 )
nodes/fragment/39/position = Vector2( -500, 140 )
nodes/fragment/41/node = SubResource( 29 )
nodes/fragment/41/position = Vector2( 600, 540 )
nodes/fragment/42/node = SubResource( 30 )
nodes/fragment/42/position = Vector2( 460, 600 )
nodes/fragment/45/node = SubResource( 31 )
nodes/fragment/45/position = Vector2( 1000, 440 )
nodes/fragment/46/node = SubResource( 32 )
nodes/fragment/46/position = Vector2( 760, 640 )
nodes/fragment/50/node = SubResource( 33 )
nodes/fragment/50/position = Vector2( -460, 280 )
nodes/fragment/54/node = SubResource( 34 )
nodes/fragment/54/position = Vector2( -1680, 1060 )
nodes/fragment/55/node = SubResource( 35 )
nodes/fragment/55/position = Vector2( -1700, 960 )
nodes/fragment/56/node = SubResource( 36 )
nodes/fragment/56/position = Vector2( -1480, 960 )
nodes/fragment/57/node = SubResource( 37 )
nodes/fragment/57/position = Vector2( -1060, 1020 )
nodes/fragment/58/node = SubResource( 38 )
nodes/fragment/58/position = Vector2( -1280, 980 )
nodes/fragment/59/node = SubResource( 39 )
nodes/fragment/59/position = Vector2( -1280, 1100 )
nodes/fragment/60/node = SubResource( 41 )
nodes/fragment/60/position = Vector2( -1680, 1200 )
nodes/fragment/61/node = SubResource( 44 )
nodes/fragment/61/position = Vector2( -860, 1140 )
nodes/fragment/62/node = SubResource( 45 )
nodes/fragment/62/position = Vector2( -660, 1040 )
nodes/fragment/63/node = SubResource( 48 )
nodes/fragment/63/position = Vector2( -860, 1380 )
nodes/fragment/64/node = SubResource( 49 )
nodes/fragment/64/position = Vector2( -1680, 1280 )
nodes/fragment/65/node = SubResource( 50 )
nodes/fragment/65/position = Vector2( -1720, 1400 )
nodes/fragment/66/node = SubResource( 51 )
nodes/fragment/66/position = Vector2( -1280, 1240 )
nodes/fragment/67/node = SubResource( 52 )
nodes/fragment/67/position = Vector2( -1520, 1280 )
nodes/fragment/68/node = SubResource( 53 )
nodes/fragment/68/position = Vector2( -1100, 1280 )
nodes/fragment/69/node = SubResource( 54 )
nodes/fragment/69/position = Vector2( -600, 1180 )
nodes/fragment/70/node = SubResource( 55 )
nodes/fragment/70/position = Vector2( -1100, 1480 )
nodes/fragment/71/node = SubResource( 56 )
nodes/fragment/71/position = Vector2( -1300, 1480 )
nodes/fragment/72/node = SubResource( 57 )
nodes/fragment/72/position = Vector2( -80, 980 )
nodes/fragment/73/node = SubResource( 58 )
nodes/fragment/73/position = Vector2( -860, 1000 )
nodes/fragment/74/node = SubResource( 59 )
nodes/fragment/74/position = Vector2( -700, 700 )
nodes/fragment/78/node = SubResource( 60 )
nodes/fragment/78/position = Vector2( -640, 800 )
nodes/fragment/79/node = SubResource( 61 )
nodes/fragment/79/position = Vector2( -460, 720 )
nodes/fragment/80/node = SubResource( 63 )
nodes/fragment/80/position = Vector2( -260, 760 )
nodes/fragment/81/node = SubResource( 64 )
nodes/fragment/81/position = Vector2( -1020, 820 )
nodes/fragment/83/node = SubResource( 65 )
nodes/fragment/83/position = Vector2( -1480, 1160 )
nodes/fragment/84/node = SubResource( 66 )
nodes/fragment/84/position = Vector2( -1540, 1480 )
nodes/fragment/85/node = SubResource( 67 )
nodes/fragment/85/position = Vector2( -440, 860 )
nodes/fragment/86/node = SubResource( 68 )
nodes/fragment/86/position = Vector2( 1240, 500 )
nodes/fragment/88/node = SubResource( 69 )
nodes/fragment/88/position = Vector2( 1080, 680 )
nodes/fragment/89/node = SubResource( 70 )
nodes/fragment/89/position = Vector2( 1440, 540 )
nodes/fragment/90/node = SubResource( 71 )
nodes/fragment/90/position = Vector2( 1340, 720 )
nodes/fragment/connections = PoolIntArray( 8, 0, 11, 2, 10, 0, 8, 1, 3, 0, 11, 1, 11, 0, 12, 1, 23, 1, 24, 1, 22, 0, 23, 0, 23, 0, 25, 0, 24, 0, 20, 0, 25, 0, 21, 0, 23, 0, 26, 0, 26, 0, 24, 0, 23, 1, 27, 0, 27, 0, 25, 1, 28, 0, 26, 1, 28, 0, 27, 1, 35, 0, 34, 0, 36, 0, 34, 2, 34, 0, 38, 0, 39, 0, 6, 0, 6, 0, 3, 1, 39, 0, 3, 0, 37, 0, 34, 1, 3, 0, 41, 2, 19, 0, 41, 0, 42, 0, 41, 1, 12, 0, 0, 1, 41, 0, 45, 0, 46, 0, 45, 1, 2, 0, 50, 1, 50, 0, 3, 2, 17, 0, 50, 0, 55, 0, 56, 0, 54, 0, 56, 1, 58, 0, 57, 0, 59, 0, 58, 0, 56, 0, 59, 0, 64, 0, 67, 0, 67, 1, 68, 1, 67, 0, 66, 0, 66, 0, 68, 0, 68, 0, 61, 0, 61, 0, 69, 0, 63, 0, 69, 1, 70, 0, 63, 0, 67, 0, 70, 0, 71, 0, 70, 1, 67, 1, 71, 0, 69, 0, 62, 1, 62, 0, 72, 2, 57, 0, 73, 0, 73, 0, 62, 0, 78, 0, 79, 1, 74, 0, 79, 0, 79, 0, 80, 0, 80, 0, 10, 0, 81, 0, 78, 1, 60, 0, 83, 0, 83, 0, 59, 1, 65, 0, 84, 0, 84, 0, 71, 1, 84, 0, 66, 1, 69, 0, 78, 0, 81, 0, 85, 0, 85, 0, 80, 1, 45, 0, 86, 0, 88, 0, 86, 1, 72, 0, 88, 0, 86, 0, 89, 0, 89, 0, 0, 5, 90, 0, 89, 1, 72, 0, 45, 2 )

[resource]
shader = SubResource( 72 )
shader_param/Drawing = 1.0
shader_param/Deformation = 0.0
shader_param/Emission = 0.9

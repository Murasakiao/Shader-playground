[gd_resource type="ShaderMaterial" load_steps=9 format=2]

[sub_resource type="VisualShaderNodeColorConstant" id=1]
constant = Color( 0, 0.443359, 1, 1 )

[sub_resource type="VisualShaderNodeFresnel" id=2]

[sub_resource type="VisualShaderNodeVectorOp" id=3]
operator = 2

[sub_resource type="VisualShaderNodeColorConstant" id=4]
constant = Color( 1, 0.658203, 0.125, 1 )

[sub_resource type="VisualShaderNodeScalarOp" id=5]
default_input_values = [ 0, 0.0, 1, 1.0 ]

[sub_resource type="VisualShaderNodeColorConstant" id=6]
constant = Color( 1, 0.797058, 0.316406, 1 )

[sub_resource type="VisualShaderNodeVectorScalarMix" id=7]

[sub_resource type="VisualShader" id=8]
code = "shader_type spatial;
render_mode specular_schlick_ggx;




void vertex() {
// Output:0

}

void fragment() {
// Color:4
	vec3 n_out4p0 = vec3(1.000000, 0.658203, 0.125000);
	float n_out4p1 = 1.000000;

// Color:6
	vec3 n_out6p0 = vec3(1.000000, 0.797058, 0.316406);
	float n_out6p1 = 1.000000;

// Fresnel:2
	float n_in2p3 = 1.00000;
	float n_out2p0 = pow(1.0 - clamp(dot(NORMAL, VIEW), 0.0, 1.0), n_in2p3);

// VectorScalarMix:7
	vec3 n_out7p0 = mix(n_out4p0, n_out6p0, n_out2p0);

// ScalarOp:5
	float n_in5p1 = 1.00000;
	float n_out5p0 = n_out2p0 + n_in5p1;

// VectorOp:3
	vec3 n_out3p0 = n_out7p0 * vec3(n_out5p0);

// Output:0
	EMISSION = n_out3p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -1311.75, -96.25 )
nodes/fragment/0/position = Vector2( 660, 160 )
nodes/fragment/2/node = SubResource( 2 )
nodes/fragment/2/position = Vector2( -260, 440 )
nodes/fragment/3/node = SubResource( 3 )
nodes/fragment/3/position = Vector2( 220, 340 )
nodes/fragment/4/node = SubResource( 4 )
nodes/fragment/4/position = Vector2( -340, 240 )
nodes/fragment/5/node = SubResource( 5 )
nodes/fragment/5/position = Vector2( 0, 440 )
nodes/fragment/6/node = SubResource( 6 )
nodes/fragment/6/position = Vector2( -240, 340 )
nodes/fragment/7/node = SubResource( 7 )
nodes/fragment/7/position = Vector2( -17, 282.5 )
nodes/fragment/14/node = SubResource( 1 )
nodes/fragment/14/position = Vector2( -380, 140 )
nodes/fragment/connections = PoolIntArray( 2, 0, 5, 0, 3, 0, 0, 5, 7, 0, 3, 0, 2, 0, 7, 2, 5, 0, 3, 1, 6, 0, 7, 1, 4, 0, 7, 0 )

[resource]
shader = SubResource( 8 )

[gd_resource type="ShaderMaterial" load_steps=4 format=2]

[sub_resource type="Shader" id=1]
code = "shader_type spatial;
render_mode ambient_light_disabled;

uniform sampler2D noise;
const float PI = 3.14;

uniform vec4 first_color : hint_color = vec4(1.0);
uniform vec4 second_color : hint_color = vec4(1.0);
uniform float alpha = 1.0;

void fragment(){
	
	float t = mod(TIME, 1.0);
	
	vec2 UV_move = vec2(UV.x + t, UV.y);
	
	float n = texture(noise, UV_move).x;
	
	float n_s = smoothstep(0.0, 0.8, n * UV.x);
	
	float fade = UV.x * sin(UV.y  * PI) ;
	
	float a = smoothstep(0.0, 0.95, fade);
	
	ALPHA = a * n_s * alpha;
	
	vec3 color = mix(first_color, second_color, UV.x).rgb;
	ALBEDO = color;
	EMISSION = mix(vec3(1.0), color, 0.9) * 6.0;
}"

[sub_resource type="OpenSimplexNoise" id=2]
period = 128.0
persistence = 0.0

[sub_resource type="NoiseTexture" id=3]
seamless = true
noise = SubResource( 2 )

[resource]
shader = SubResource( 1 )
shader_param/first_color = Color( 0.00784314, 0, 1, 1 )
shader_param/second_color = Color( 0.756863, 0, 1, 1 )
shader_param/alpha = 1.0
shader_param/noise = SubResource( 3 )

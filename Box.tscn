[gd_scene load_steps=23 format=2]

[ext_resource path="res://Box.gd" type="Script" id=1]

[sub_resource type="BoxShape" id=1]
extents = Vector3( 0.2, 0.2, 0.2 )

[sub_resource type="VisualShaderNodeColorConstant" id=2]
constant = Color( 0.130165, 0.124207, 0.171875, 1 )

[sub_resource type="VisualShaderNodeVectorDecompose" id=15]

[sub_resource type="VisualShaderNodeVectorCompose" id=16]

[sub_resource type="VisualShaderNodeScalarOp" id=17]

[sub_resource type="VisualShaderNodeInput" id=18]
input_name = "time"

[sub_resource type="VisualShaderNodeScalarOp" id=19]
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=20]
operator = 1

[sub_resource type="VisualShaderNodeInput" id=3]
input_name = "view"

[sub_resource type="OpenSimplexNoise" id=4]

[sub_resource type="NoiseTexture" id=5]
seamless = true
noise = SubResource( 4 )

[sub_resource type="VisualShaderNodeTexture" id=6]
texture = SubResource( 5 )

[sub_resource type="VisualShaderNodeScalarSmoothStep" id=7]
default_input_values = [ 0, 0.4, 1, 0.6, 2, 0.0 ]

[sub_resource type="VisualShaderNodeScalarOp" id=8]
default_input_values = [ 0, 1.0, 1, 0.0 ]
operator = 1

[sub_resource type="VisualShaderNodeVectorOp" id=9]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 2, 2, 2 ) ]
operator = 2

[sub_resource type="VisualShaderNodeScalarUniform" id=10]
uniform_name = "Progress"

[sub_resource type="VisualShaderNodeScalarOp" id=11]
default_input_values = [ 0, 0.0, 1, 0.02 ]

[sub_resource type="VisualShaderNodeScalarSmoothStep" id=12]
default_input_values = [ 0, 0.4, 1, 0.6, 2, 0.0 ]

[sub_resource type="VisualShader" id=13]
code = "shader_type spatial;
render_mode specular_schlick_ggx;

uniform float Progress;
uniform sampler2D tex_frg_3;



void vertex() {
// Output:0

}

void fragment() {
// Color:10
	vec3 n_out10p0 = vec3(0.130165, 0.124207, 0.171875);
	float n_out10p1 = 1.000000;

// ScalarUniform:7
	float n_out7p0 = Progress;

// Input:2
	vec3 n_out2p0 = VIEW;

// VectorDecompose:11
	float n_out11p0 = n_out2p0.x;
	float n_out11p1 = n_out2p0.y;
	float n_out11p2 = n_out2p0.z;

// Input:14
	float n_out14p0 = TIME;

// ScalarOp:15
	float n_in15p1 = 0.10000;
	float n_out15p0 = n_out14p0 * n_in15p1;

// ScalarOp:13
	float n_out13p0 = n_out11p0 + n_out15p0;

// ScalarOp:16
	float n_out16p0 = n_out11p1 - n_out15p0;

// VectorCompose:12
	float n_in12p2 = 0.00000;
	vec3 n_out12p0 = vec3(n_out13p0, n_out16p0, n_in12p2);

// Texture:3
	vec4 tex_frg_3_read = texture(tex_frg_3, n_out12p0.xy);
	vec3 n_out3p0 = tex_frg_3_read.rgb;
	float n_out3p1 = tex_frg_3_read.a;

// ScalarSmoothStep:4
	float n_out4p0 = smoothstep(n_out7p0, n_out7p0, dot(n_out3p0, vec3(0.333333, 0.333333, 0.333333)));

// ScalarOp:8
	float n_in8p1 = 0.02000;
	float n_out8p0 = n_out7p0 + n_in8p1;

// ScalarSmoothStep:9
	float n_out9p0 = smoothstep(n_out8p0, n_out8p0, dot(n_out3p0, vec3(0.333333, 0.333333, 0.333333)));

// ScalarOp:5
	float n_in5p0 = 1.00000;
	float n_out5p0 = n_in5p0 - n_out9p0;

// VectorOp:6
	vec3 n_in6p1 = vec3(2.00000, 2.00000, 2.00000);
	vec3 n_out6p0 = vec3(n_out5p0) * n_in6p1;

// Output:0
	ALBEDO = n_out10p0;
	ALPHA = n_out4p0;
	EMISSION = n_out6p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -275, 20 )
nodes/fragment/0/position = Vector2( 1140, 0 )
nodes/fragment/2/node = SubResource( 3 )
nodes/fragment/2/position = Vector2( -660, 160 )
nodes/fragment/3/node = SubResource( 6 )
nodes/fragment/3/position = Vector2( 200, 80 )
nodes/fragment/4/node = SubResource( 7 )
nodes/fragment/4/position = Vector2( 420, 60 )
nodes/fragment/5/node = SubResource( 8 )
nodes/fragment/5/position = Vector2( 660, 140 )
nodes/fragment/6/node = SubResource( 9 )
nodes/fragment/6/position = Vector2( 860, 140 )
nodes/fragment/7/node = SubResource( 10 )
nodes/fragment/7/position = Vector2( 0, -100 )
nodes/fragment/8/node = SubResource( 11 )
nodes/fragment/8/position = Vector2( 120, 40 )
nodes/fragment/9/node = SubResource( 12 )
nodes/fragment/9/position = Vector2( 420, 200 )
nodes/fragment/10/node = SubResource( 2 )
nodes/fragment/10/position = Vector2( 800.094, -21.1614 )
nodes/fragment/11/node = SubResource( 15 )
nodes/fragment/11/position = Vector2( -460, 200 )
nodes/fragment/12/node = SubResource( 16 )
nodes/fragment/12/position = Vector2( -40, 180 )
nodes/fragment/13/node = SubResource( 17 )
nodes/fragment/13/position = Vector2( -220, 140 )
nodes/fragment/14/node = SubResource( 18 )
nodes/fragment/14/position = Vector2( -720, 360 )
nodes/fragment/15/node = SubResource( 19 )
nodes/fragment/15/position = Vector2( -500, 360 )
nodes/fragment/16/node = SubResource( 20 )
nodes/fragment/16/position = Vector2( -220, 260 )
nodes/fragment/connections = PoolIntArray( 3, 0, 4, 2, 4, 0, 0, 1, 5, 0, 6, 0, 7, 0, 4, 1, 7, 0, 8, 0, 6, 0, 0, 5, 7, 0, 4, 0, 8, 0, 9, 0, 8, 0, 9, 1, 3, 0, 9, 2, 9, 0, 5, 1, 10, 0, 0, 0, 2, 0, 11, 0, 12, 0, 3, 0, 11, 0, 13, 0, 13, 0, 12, 0, 14, 0, 15, 0, 15, 0, 13, 1, 15, 0, 16, 1, 11, 1, 16, 0, 16, 0, 12, 1 )

[sub_resource type="ShaderMaterial" id=14]
render_priority = 2
shader = SubResource( 13 )
shader_param/Progress = 1.0

[sub_resource type="Animation" id=21]
resource_name = "Invoke"
tracks/0/type = "value"
tracks/0/path = NodePath("CSGBox2:material:shader_param/Progress")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.5 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ 1.0, 0.2 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:gravity_scale")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.4, 1 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ 0.0, -0.2, 1.0 ]
}

[node name="Box" type="RigidBody"]
gravity_scale = 0.0
script = ExtResource( 1 )

[node name="CollisionShape" type="CollisionShape" parent="."]
shape = SubResource( 1 )

[node name="CSGBox2" type="CSGBox" parent="."]
width = 0.4
height = 0.4
depth = 0.4
material = SubResource( 14 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
anims/Invoke = SubResource( 21 )

[node name="Timer" type="Timer" parent="."]
wait_time = 4.0
one_shot = true
autostart = true

[node name="Tween" type="Tween" parent="."]

[connection signal="timeout" from="Timer" to="." method="_on_Timer_timeout"]
[connection signal="tween_all_completed" from="Tween" to="." method="_on_Tween_tween_all_completed"]
